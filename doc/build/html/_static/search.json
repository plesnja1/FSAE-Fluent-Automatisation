[{"objectID":"Home","href":"user_guide/mesh_settings.html#creatings-mesh","title":"Creatings mesh","text":"Creatings mesh\n\nPosprocessing options menu gives users options to choose which and how detailed postprocessing features they want to perform for their simulation."},{"objectID":"Home","href":"user_guide/mesh_settings.html#export-forces-to-excell-file","title":"Creatings mesh > Export forces to excell file?","text":"Export forces to excell file?\n\ntype: check - bool\n\nOption to export drag, lift, and pressure distribution of all subassemblies into a .CSV file."},{"objectID":"Home","href":"user_guide/geometry_naming.html#cad-model-preparation","title":"CAD model preparation","text":"CAD model preparation\n\nIt is crutial to maintain a good naming system of your CAD geometry and to adhere to certain rules when naming your parts and assemblies.\nThe pyfluent script takes yopur imported CAD and renames each part and assembly so that it contains also name of its entire CAD tree hierarchy.\nThis enables us to find the correct parts even if part with same name exists in different assembly and allow us to assign mesh sizings to entire\nassemblies without needing to specify them for each part."},{"objectID":"Home","href":"user_guide/geometry_naming.html#the-tree-structure","title":"CAD model preparation > The tree structure","text":"The tree structure\n\nThe base of the cad tree should be divided into two assemblies. The Vehicle assembly, that contains the car geometry and the BOIs assembly,\nwhich contains then bodies of influence. It is important to have them in separate assemblies as both are treated very differently.\n\nAbove is an example of a functional CAD tree with a Vehicle and BOIs assemblies on top of CAD tree hierarchy."},{"objectID":"Home","href":"user_guide/geometry_naming.html#part-naming","title":"CAD model preparation > Part naming","text":"Part naming\n\nIn terms of naming of parts, do not use signs such as (*,-.: ) since these would interfere with either AutoFluent part search engine or\nFluents internal part naming. If you want to seperate your part name use either underscore ( _ ) or start each new word with uppercase letter.\n\nBy default after CAD import fuent names the imported part in format:\n\npart_name:tree_path-part_name-solid_name.\n\nIf we take a single solid in the front wing example bellow:\n\nWe can see that the part name is wing, the solid name is Solid and tree path is vehicle-a-fs-fwing. The resulting part will then be named:\n\nWhich makes later working with Fluent parts much easier."},{"objectID":"Home","href":"user_guide/geometry_naming.html#inheritance","title":"CAD model preparation > Inheritance","text":"Inheritance\n\nDuring a CAD creation a concept of inheritance should be kept in mind. Here the concept of inheritance applies mainly on surface\nmesh sizing, meaning that a part inherits all of the surface mesh sizing options from all of its parents in CAD tree. The final\nresulting mesh sizing is then derived from the smallest mesh size setting applied.\n\nAs example if we apply medium surface mesh sizing for the aerodynamics assembly named “a” and this medium setting will be applied\nto all its subassemblies (in this case “sw”, “rw”, “fw”) and their individual subassemblies and parts. I could then decide to apply\na finer sizing to a front wing endpalte part called “endplate”. This part also inherits the medium setting from the “a” assembly\nwhich is its parent, but since the smallest settings applies, fluent will ignore the medium setting.\n\nIt then makes sense to structure the CAD tree from the largest details to the finest."},{"objectID":"Home","href":"getting_started/getting_started.html#getting-started-with-autofluent","title":"Getting Started with AutoFluent","text":"Getting Started with AutoFluent"},{"objectID":"Home","href":"getting_started/getting_started.html#downloading-autofluent","title":"Getting Started with AutoFluent > Downloading AutoFluent","text":"Downloading AutoFluent\n\nUser can either download entire branch from gitHub web or pull the branch from git."},{"objectID":"Home","href":"getting_started/getting_started.html#dependend-libraries","title":"Getting Started with AutoFluent > Dependend libraries","text":"Dependend libraries\n\nAutoFluent is dependend on these external libraries that need  to be installed prior:\n\ncustomtkinter\n\nPIL\n\nansys.fluent.core\n\nansys.geometry.core\n\npint\n\nopenpyxl\n\nnumpy\n\npandas\n\nwhich you can all instal through:"},{"objectID":"Home","href":"getting_started/getting_started.html#starting-autofluent","title":"Getting Started with AutoFluent > Starting AutoFluent","text":"Starting AutoFluent\n\nTo use AutoFluent a Python 3.8 or higher needs to be installed. Inside a downloaded folder a Main.py script is located.\nIf started throug Python a graphical user interface will appear."},{"objectID":"Home","href":"getting_started/getting_started.html#navigating-graphical-user-interface","title":"Getting Started with AutoFluent > Navigating Graphical User Interface","text":"Navigating Graphical User Interface\n\nGUI is divided into 5 distincted areas. Top select menu (Blue) switches between different options menus.\nMiddle large window (Yellow) is where options menus are shown.\nBottom static menu (Red) is for general settings as working directory, solver stage, settings presets and starting simulation.\nRight side bar (Purple) is a visualisation of a solution queue.\nOn bottom (Green) is a transcript from a console.\n\n"},{"objectID":"Home","href":"GUI_guide/prisms.html#prisms-options-menu","title":"Prisms Options Menu","text":"Prisms Options Menu\n\nPrisms options menu specifies inflation layers (a.k.a. prisms) on specified parts and assemblies. This menu scopies the scoped sizing menu in\nterms of aviable mesh sizings."},{"objectID":"Home","href":"GUI_guide/prisms.html#prism-type","title":"Prisms Options Menu > Prism type","text":"Prism type\n\ntype: switch - string\n\nWhat type of inflation lasyer is to be applied to a given surface. Aviable are uniform, aspect ratio and last ratio.\nfor more info on prism types see Adding Boundary Layers."},{"objectID":"Home","href":"GUI_guide/prisms.html#growth-rate","title":"Prisms Options Menu > Growth rate","text":"Growth rate\n\ntype: text win. - float\n\nA rate of geometric growth of neighboring layers."},{"objectID":"Home","href":"GUI_guide/prisms.html#first-layer-height","title":"Prisms Options Menu > First layer height","text":"First layer height\n\ntype: text win. - float\n\nActive when uniform Prism type is selected. A hight of first prism layer in mm."},{"objectID":"Home","href":"GUI_guide/prisms.html#first-aspect-ratio","title":"Prisms Options Menu > First aspect ratio","text":"First aspect ratio\n\ntype: text win. - float\n\nActive when aspect ratio Prism type is selected. A ratio between surface cell size and first layer height."},{"objectID":"Home","href":"GUI_guide/prisms.html#first-aspect-ratio","title":"Prisms Options Menu > First aspect ratio","text":"First aspect ratio\n\ntype: text win. - float\n\nActive when last ratio Prism type is selected. A ratio between surface cell size and last layer height."},{"objectID":"Home","href":"GUI_guide/prisms.html#number-of-layers","title":"Prisms Options Menu > Number of layers","text":"Number of layers\n\ntype: text win. - integer\n\nTotal number of prism layers."},{"objectID":"Home","href":"GUI_guide/prisms.html#write","title":"Prisms Options Menu > Write…","text":"Write…\n\ntype: button - string\n\nOpens an explorer window through which user saves the current prism and scoped sizing settings into a .json file."},{"objectID":"Home","href":"GUI_guide/prisms.html#update","title":"Prisms Options Menu > Update","text":"Update\n\ntype: button - -\n\nSaves changed parameters for current prism sizing. Needs to be pressed after every change to a prisms."},{"objectID":"Home","href":"GUI_guide/bottomstatic.html#bottom-static-menu","title":"Bottom Static Menu","text":"Bottom Static Menu\n\nBottom static menu provides selection of starting simulation stage, writing and reading of overall simulation settings and working directory."},{"objectID":"Home","href":"GUI_guide/bottomstatic.html#meshingsolverpostprocess","title":"Bottom Static Menu > Meshing/Solver/Postprocess","text":"Meshing/Solver/Postprocess\n\ntype: segment - string\n\nOption to start simulation from certain stage. User can choose to start from either meshing, solver or postprocessing stage."},{"objectID":"Home","href":"GUI_guide/bottomstatic.html#working-directory","title":"Bottom Static Menu > Working directory","text":"Working directory\n\ntype: text win. - string\n\nPath to a working directory where all the outputs and results will be saved"},{"objectID":"Home","href":"GUI_guide/bottomstatic.html#load-settings","title":"Bottom Static Menu > Load settings","text":"Load settings\n\ntype: button - string\n\nOpens an explorel window where simulation settings .json file can be chosen."},{"objectID":"Home","href":"GUI_guide/bottomstatic.html#save-settings","title":"Bottom Static Menu > Save settings","text":"Save settings\n\ntype: button - string\n\nWrite .json file containing simulation settings."},{"objectID":"Home","href":"GUI_guide/bottomstatic.html#start-calculation","title":"Bottom Static Menu > Start calculation","text":"Start calculation\n\ntype: button - sim_class\n\nPushes the simulation with current settings into a queue."},{"objectID":"Home","href":"user_guide/user_guide_contents.html#user-guide","title":"User Guide","text":"User Guide\n\n\n\nThis AutoFluent user guide should help you understand principles of working with AutoFluent as well as some basic principles of creating\nCFD simulations of acceptable quality."},{"objectID":"Home","href":"user_guide/user_guide_contents.html#setting-up-cad-geometry","title":"User Guide > Setting up CAD geometry","text":"Setting up CAD geometry\n\nAutoFluent uses tree hierarchy of imported CAD geometry to create named selections, mesh sizings and output variables.\nAs such, a rigorous CAD naming conventions during development needs to be ahered to."},{"objectID":"Home","href":"user_guide/user_guide_contents.html#mesh-creation","title":"User Guide > Mesh creation","text":"Mesh creation\n\nEven though AutoFluent atuomises entire Fluent Fault tolerant workflow, a propper mesh sizings needs to be defined. AutoFluent offers\nan intuitive GUI tool to create mesh sizing settings .json files that offers repeatibility in creating quality volumetric meshes."},{"objectID":"Home","href":"user_guide/user_guide_contents.html#solver-setup","title":"User Guide > Solver setup","text":"Solver setup\n\nAutoFluent offers an useful range of turbulence models, slovers, algorithms and temporal settings. This offers a variability in speed and\ncomplexity of simulations but knowing how to set up the solver based on desired output, aviable hardvare and used mesh\nis essential."},{"objectID":"Home","href":"user_guide/user_guide_contents.html#boundary-conditions","title":"User Guide > Boundary conditions","text":"Boundary conditions\n\nApart from inlet velocity AutoFluent offers a posibility to set up your wheel base and incorporate a radiator or fans into your simulation.\nA propper setup of these boundaries defines the simulation and provides an usefull input to other groups such as\npowertrain."},{"objectID":"Home","href":"user_guide/user_guide_contents.html#postprocessing","title":"User Guide > Postprocessing","text":"Postprocessing\n\nMost important part of any simulation is evaluating its results and making sure the results can be trusted. In postprocessing stage of\nAutoFluent the user can hoose which data and how detailed he wants to be shown."},{"objectID":"Home","href":"user_guide/postprocessing_guide.html#posprocessing","title":"Posprocessing","text":"Posprocessing\n\nPosprocessing options menu gives users options to choose which and how detailed postprocessing features they want to perform for their simulation."},{"objectID":"Home","href":"user_guide/postprocessing_guide.html#export-forces-to-excell-file","title":"Posprocessing > Export forces to excell file?","text":"Export forces to excell file?\n\ntype: check - bool\n\nOption to export drag, lift, and pressure distribution of all subassemblies into a .CSV file."},{"objectID":"Home","href":"API_reference/Main.html#main","title":"Main","text":"Main\n\n\n\nScript responsible for turning on the app and containing classes responsible for running simulations, managing queue, and functional GUI.\n\nMain script can be found at the root folder of entire AutoFluent.\n\n\n\nclass Main.SimulationClass(simGeneralObject, simMeshObjectList, simTunnelObject, simSolverSett, simBoundarySett, simPostproSett, simParametersSett, simName)\n\nClass responsible for running each stage of simulation.\n\nThe initial parametres for this class are individual simulation settings from which the SimulationClass\nruns the individual simulation steps.\n\nAttributes:\n\n\n\nsimGeneralObject: GeneralSett\n\n\n\n\n\nsimMeshObjectList: Dict(List(MeshObjects.Vehicle))\n\n\n\n\n\nsimTunnelObject: TunnelSett\n\n\n\n\n\nsimSolverSett: SimulationSett\n\n\n\n\n\nsimBoundarySett: Boundary_conditions_sett\n\n\n\n\n\nsimPostproSett: PostprocessSett\n\n\n\n\n\nsimParametersSett: ParametrizationSett\n\n\n\n\n\nsimName: String\n\n\n\n\n\nSimID: Int\n\n\n\n\n\n_registry: List(SimulationClass)\n\n\n\n\n\nSimStat: String\n\n\n\n\n\nmeshPath: String\n\n\n\n\n\nSimThread: String\n\n\n\n\n\nsolverPath: String\n\n\n\n\n\nfindSimID()\n\n"},{"objectID":"Home","href":"API_reference/API_contents.html#api_reference","title":"API_reference","text":"API_reference\n\nAn API reference for custom functions and classes used in automatisation script for easier own development."},{"objectID":"Home","href":"API_reference/API_contents.html#mainpy-script","title":"API_reference > Main.py script","text":"Main.py script\n\nThis\n\n"},{"objectID":"Home","href":"GUI_guide/simulation.html#simulation-options-menu","title":"Simulation Options Menu","text":"Simulation Options Menu\n\nSimulation options menu sets up simulation models, basic solver settings and iterations setup."},{"objectID":"Home","href":"GUI_guide/simulation.html#turbulence-model","title":"Simulation Options Menu > Turbulence model","text":"Turbulence model\n\ntype: switch - string\n\nType of turbulence model used. Aviable SST k-Omega and k-Epsilon."},{"objectID":"Home","href":"GUI_guide/simulation.html#wall-function","title":"Simulation Options Menu > Wall function","text":"Wall function\n\ntype: switch - string\n\nType of wall function used when k-Epsilon is chosen. Aviable Enhanced, Standard and Non equilibrium"},{"objectID":"Home","href":"GUI_guide/simulation.html#pressure-velocity-coupling","title":"Simulation Options Menu > Pressure-Velocity coupling","text":"Pressure-Velocity coupling\n\ntype: switch - string\n\nType of Pressure-Velocity coupling algorithm. Aviable Coupled and SIMPLE. Coupled algorithm takes up more RAM (roughly\ntwice as much as SIMPLE), takes more time per single iteration but tends to be more stable and converges quicker.\nSIMPLE algorithm is recomended mainly when RAM issues are present."},{"objectID":"Home","href":"GUI_guide/simulation.html#time","title":"Simulation Options Menu > Time","text":"Time\n\ntype: switch - string\n\nChoice between sationary or transient simulation. Aviable Steady and Transient. These settings also change the function of\nsubsequent options."},{"objectID":"Home","href":"GUI_guide/simulation.html#number-of-iterations","title":"Simulation Options Menu > Number of iterations","text":"Number of iterations\n\ntype: text win. - integer\n\nNumber of iterations done for steady simulation."},{"objectID":"Home","href":"GUI_guide/simulation.html#pseudo-time-step","title":"Simulation Options Menu > Pseudo time step","text":"Pseudo time step\n\ntype: text win. - float\n\nA pseudo time step value used for Pseudo Time Method Under-Relaxation method. Higher values could speed up simulation but also make\nless stable. Default value is 1. For more info see  Pseudo Time Method Under-Relaxation"},{"objectID":"Home","href":"GUI_guide/simulation.html#iterations-per-time-step","title":"Simulation Options Menu > Iterations per time step","text":"Iterations per time step\n\ntype: text win. - integer\n\nNumber of iterations performed per single time step during transient simulation."},{"objectID":"Home","href":"GUI_guide/simulation.html#time-step-size-s","title":"Simulation Options Menu > Time step size [s]","text":"Time step size [s]\n\ntype: text win. - float\n\nSize of a single time step during a transient simulation."},{"objectID":"Home","href":"GUI_guide/simulation.html#end-time-of-simulation-s","title":"Simulation Options Menu > End time of simulation [s]","text":"End time of simulation [s]\n\ntype: text win. - integer\n\nFinal time for transient simulation."},{"objectID":"Home","href":"GUI_guide/simulation.html#air-temperature-c","title":"Simulation Options Menu > Air temperature [°C]","text":"Air temperature [°C]\n\ntype: text win. - float\n\nAtmosferic temperature used for air density and viscosity calculations according to International Standard Atmosfere (ISA)."},{"objectID":"Home","href":"GUI_guide/simulation.html#altitude-m","title":"Simulation Options Menu > Altitude [m]","text":"Altitude [m]\n\ntype: text win. - integer\n\nAltitude used for air density and viscosity calculations according to International Standard Atmosfere (ISA)."},{"objectID":"Home","href":"getting_started/first_project.html#first-autofluent-project","title":"First AutoFluent project","text":"First AutoFluent project\n\nFirst project can be an included template formula with sizing. Through this we can show entire process of starting a simulation."},{"objectID":"Home","href":"getting_started/first_project.html#working-directory-setup","title":"First AutoFluent project > Working directory setup","text":"Working directory setup\n\nAt the start of every project it is important to setup your working directory. To this directory will fluent write all save files, transcripts as well as all results.\nWe can either write tha path to our desired directory into a text file or we can navigate to it (or create it) through explorer window by pressing on Open… button\nnext to a Working directory text."},{"objectID":"Home","href":"getting_started/first_project.html#cad-import","title":"First AutoFluent project > CAD import","text":"CAD import\n\nThere are two ways to import CAD file into AutoFluent, partial and full. Here we are gonna import a full CAD, meaning the CAD file contains the entire car geometry and\nBodies Of Influence. First a Load full assembly .stp CAD file… check has to be activated. This switches to full CAD import. Then through Open… button or py pasting\nthe path to a .stp file choose the formula.stp file located in the Example folder."},{"objectID":"Home","href":"getting_started/first_project.html#system-settings","title":"First AutoFluent project > System settings","text":"System settings\n\nAs every computer has different specifications, we have to set apropriate system settings. These include number of aviable nodes (cores) and wether we want\nto simulate on CPU or GPU (only for high-end computaional GPUs). First choose number of solver processes which is smaller than number of CPU cores in your computer\nand then depending on your GPU and RAM (or GPU RAM) set precision and type of solver (single precision uses much less RAM with negligible influence on precision)."},{"objectID":"Home","href":"getting_started/first_project.html#mesh-sizing","title":"First AutoFluent project > Mesh sizing","text":"Mesh sizing\n\nWe can either specify scoped sizing directly in GUI or load a .json file containing all mesh sizing iformations. In Example folder there already is such file\nwhich has all mesh setting properly named according to STEP file tree (details in User Guide) so we can use that. In top select menu go to Scoped sizing menu and press\nOpen… button. In expoler go to example folder and choose Scoped_sizing_formula.json file. In left sidebar you can see a tree with mesh sizings. Feel free to compare\nit with a CAD tree. Prisms settings are also included in said file."},{"objectID":"Home","href":"getting_started/first_project.html#boundary-conditions","title":"First AutoFluent project > Boundary conditions","text":"Boundary conditions\n\nIn top select menu Boundary conditions tab we can chose inlet air velocity, wheel diameter and wheel base. These can be left as default. Since we loaded scoped sizing\nwithout fans, we need to disable fans in our computation. Uncheck the Simulate fan? check. Also feel free to try leaving it on, but remember to select a Scoped_sizing_formula_fan.json\nsizing file."},{"objectID":"Home","href":"getting_started/first_project.html#additional-settings","title":"First AutoFluent project > Additional settings","text":"Additional settings\n\nAs it is, the simualtion is ready to be sent for computing, since all the default values are set for the example model. We might be compelled to change some settings though."},{"objectID":"Home","href":"getting_started/first_project.html#-of-iterations","title":"First AutoFluent project > # of iterations","text":"# of iterations\n\nBy default the number of iterations is set to 1500. This might be unecessary high and its decrease could reduce the computation time drastically, especially if you computate\non slow CPU. In top select menu go to Simulation menu and change the value next to Number of iterations text. Here we can also change turbulence settings and temporal\nsettings."},{"objectID":"Home","href":"getting_started/first_project.html#postprocessing","title":"First AutoFluent project > Postprocessing","text":"Postprocessing\n\nBy default the postprocessing creates 5 .AVZ scenes and 444!!! cuts (pictures). This takes a lot of time so feel free to reduce the number of cuts or disable some\ntypes of cuts."},{"objectID":"Home","href":"getting_started/first_project.html#start-calculation","title":"First AutoFluent project > Start calculation","text":"Start calculation\n\nAfter finishing setting up of simulation we can push theese settings to simulation queue by pressing Start simulation button. If there is place for it\n(as it should with our first project) the case will quicly change from waiting status to meshing status and Fluent instance will be created.\nIf all dependencies are installed and all settings set properly, entire simulation should run from start to end and in working directory results folder will be created."},{"objectID":"Home","href":"GUI_guide/tunnel.html#tunnel-options-menu","title":"Tunnel Options Menu","text":"Tunnel Options Menu\n\nTunnel options menu specifies dimensions of external computational domain (tunnel), tunnel surface mesh size and wrap resolution."},{"objectID":"Home","href":"GUI_guide/tunnel.html#maxmin-x-coordinate-mm","title":"Tunnel Options Menu > Max/Min X Coordinate [mm]","text":"Max/Min X Coordinate [mm]\n\ntype: text win. - integer\n\nMaximum and minimum X coordinate ox tunnel in mm."},{"objectID":"Home","href":"GUI_guide/tunnel.html#maxmin-y-coordinate-mm","title":"Tunnel Options Menu > Max/Min Y Coordinate [mm]","text":"Max/Min Y Coordinate [mm]\n\ntype: text win. - integer\n\nMaximum and minimum Y coordinate ox tunnel in mm."},{"objectID":"Home","href":"GUI_guide/tunnel.html#maxmin-z-coordinate-mm","title":"Tunnel Options Menu > Max/Min Z Coordinate [mm]","text":"Max/Min Z Coordinate [mm]\n\ntype: text win. - integer\n\nMaximum and minimum Z coordinate ox tunnel in mm."},{"objectID":"Home","href":"GUI_guide/tunnel.html#tunnel-surface-cell-size-mm","title":"Tunnel Options Menu > Tunnel Surface Cell Size [mm]","text":"Tunnel Surface Cell Size [mm]\n\ntype: text win. - integer\n\nMaximum surface cell size on surface of tunnel."},{"objectID":"Home","href":"GUI_guide/tunnel.html#resolution-factor","title":"Tunnel Options Menu > Resolution Factor","text":"Resolution Factor\n\ntype: text win. - float\n\nSetting a value less than 1 can help to find holes not aligned to the Cartesian axes by using finer sampling than the given size field.\nIn situations where a hole’s minimum size is larger than the size field’s minimum size, using a Resolution Factor helps to find holes\nwithout modifying the size field. That is, you can use the same size field for both hole fixing and wrapping.\nFor more info see Wrapping Objects"},{"objectID":"Home","href":"user_guide/boundary_conditions.html#boundary-conditions-options-menu","title":"Boundary Conditions Options Menu","text":"Boundary Conditions Options Menu\n\nBoundary conditions options menu specifies inlet velocity, wheel diameter and wheel base, radiators and fan settings."},{"objectID":"Home","href":"user_guide/boundary_conditions.html#inlet-velocity-ms","title":"Boundary Conditions Options Menu > Inlet velocity [m/s]","text":"Inlet velocity [m/s]\n\ntype: text win. - float\n\nInlet air velocity. Same as car speed."},{"objectID":"Home","href":"user_guide/boundary_conditions.html#wheel-diameter-m","title":"Boundary Conditions Options Menu > Wheel diameter [m]","text":"Wheel diameter [m]"},{"objectID":"Home","href":"API_reference/Main2.html#main","title":"Main","text":"Main\n\nScript responsible for turning on the app and containing classes responsible for running simulations, managing queue, and functional GUI.\n\nMain script can be found at the root folder of entire AutoFluent.\n\n\n\nclass Main.SimulationClass(simGeneralObject, simMeshObjectList, simTunnelObject, simSolverSett, simBoundarySett, simPostproSett, simParametersSett, simName, simStat='wait')\n\nBases: object\n\nClass containing all of simulation settings and responsible for starting individual simulation \nsteps as individual threads.\n\nAttributes:\n\n\n\nMethods:\n\n\n\n\n\nstates = {'dn': 'Done!', 'err': 'Error!!!', 'msh': 'Meshing', 'msh_dn': 'Meshing done!', 'post': 'Postprocessing', 'slv': 'Solving', 'slv_dn': 'Solved', 'wait': 'Waiting'}\n\nShotcuts fow various possible simulation states.\n\n\n\n__init__(simGeneralObject, simMeshObjectList, simTunnelObject, simSolverSett, simBoundarySett, simPostproSett, simParametersSett, simName, simStat='wait')\n\nConstructs a simulation class with simulation settings as its atributes.\n\n\n\nfindSimID()\n\nThis function will automatically find a closest aviable ID number for simulation.\n\nReturns\n\n(Int) ID number of simulation\n\n\n\nstartMeshing()\n\nChanges the simulation status to ‘Meshing’ and pushes the simulation settings to \nMesher.StartFluentMeshing function which takes care of entire meshing workflow.\n\nAfter meshing changes the simulation status to ‘Meshing Done’.\n\nReturns\n\n(String) path to saved volumetric mesh\n\n\n\nstartMeshingThread()\n\nStarts SimulationClass.startMeshing() method in new thread.\n\nReturns\n\n(Thread)\n\n\n\nstartSolver()\n\nChanges the simulation status to ‘Solving’ and pushes the simulation settings to \nSolver.StartFluentSolver function which takes care of entire solver workflow.\n\nAfter solving changes the simulation status to ‘Solver Done’.\n\nReturns\n\n(String) path to saved case file\n\n\n\nstartSolverThread()\n\nStarts SimulationClass.startSolver() method in new thread.\n\nReturns\n\n(Thread)\n\n\n\nstartPostpro()\n\nChanges the simulation status to ‘Postprocessing’ and pushes the simulation settings to \nPostproces.StartPostprocessing() function which takes care of entire postprocessing workflow.\n\nAfter postprocessing changes the simulation status to ‘Done’.\n\nReturns\n\nTrue\n\n\n\nstartPostproThread()\n\nStarts SimulationClass.startPostpro() method in new thread.\n\nReturns\n\n(Thread)\n\n\n\nclass Main.MainMenuButtons(master)\n\nBases: CTkScrollableFrame\n\nclass that initialises the main menu buttons which redirect the user to given \nsubcategories.\n\nMethods:\n\n\n\n\n\n__init__(master)\n\nConstruct a frame widget with the parent MASTER.\n\nValid resource names: background, bd, bg, borderwidth, class,\ncolormap, container, cursor, height, highlightbackground,\nhighlightcolor, highlightthickness, relief, takefocus, visual, width.\n\n\n\nclass Main.Queue(master, **kwargs)\n\nBases: CTkFrame\n\nQueue class manages the order of simulations in queue as well as a visualisation of queue in GUI.\n\nMethods:\n\n\n\n\n\n__init__(master, **kwargs)\n\nConstruct a frame widget with the parent MASTER.\n\nValid resource names: background, bd, bg, borderwidth, class,\ncolormap, container, cursor, height, highlightbackground,\nhighlightcolor, highlightthickness, relief, takefocus, visual, width.\n\n\n\nupdateSims(simList)\n\nThis method checks all simulations in queue and and assigns a propper status and colour based \non simulation status.\n\n\n\ninsertSim(sim)\n\nInserts a new simulation (SimulationClass) to queue.\n\n\n\nupdateColour(simList)\n\nAssigns a proper colour in queue based on simulation status.\n\n\n\nclass Main.PrintLogger(textbox)\n\nBases: object\n\nFile like objects for redirected terminal view.\n\nMethods:\n\n\n\n\n\n__init__(textbox)\n\n\n\n\n\nwrite(text)\n\nWrites into a Logger.\n\n\n\nflush()\n\n\n\n\n\nclass Main.MainApp(fg_color=None, *args, **kwargs)\n\nBases: CTk\n\nA main CTKinter class that services all other TKinter classes and pushes simulation settings into queue.\n\nMethods:\n\n\n\n\n\n__init__(fg_color=None, *args, **kwargs)\n\nReturn a new top level widget on screen SCREENNAME. A new Tcl interpreter will\nbe created. BASENAME will be used for the identification of the profile file (see\nreadprofile).\nIt is constructed from sys.argv[0] without extensions if None is given. CLASSNAME\nis the name of the widget class.\n\n\n\nwindows_init()\n\nInitialises the Options Menus top scrolls buttons and inserts a ctk.CTkFrame class of options menu to each button.\n\nIf new options menu is desired, its ctk.CTkFrame class needs to be inserted into container bellow.\n\n\n\nreset_logging()\n\nResets the terminal redirecting back to python terminal.\n\n\n\nredirect_logging()\n\nRedirects the python terminal into a GUI terminal (read only).\n\n\n\nbrowseFolders()\n\nOpens the explorer window and puts the selected folder into a GeneralObject.workingDirectory attribute.\n\n\n\nchangeSegment(a)\n\nChanges the simulation starting point and activates the GUI_Subclasses/GUI_General.General.activateDataInput() method.\n\n\n\nStart()\n\nCreates the SimulationsClass from current settings and pushes the simulation into a simulation queue.\n\n\n\nQueueLoop()\n\nLoop responsible for pushing simulations in the queue.\n\n\n\nshow_frame(cont)\n\nShows a frame of given ctk.CTkFrame class options menu.\n\n\n\ngetJsonSavePath()\n\nGets a .json file path from opened explorer window and writes current simulation settings \ninto newly created .json file.\n\n\n\nWriteSettToJson(Obj_list, file_path)\n\nWrites all the provided Settings objects into a provided .json file.\n\n\n\nbrowseJsonFiles()\n\nOpens the explorer window and reads the selected .json settings file.\n\n\n\nReadSettJson(File_path)\n\nReads a provided .json file and loads the values into settings objects."},{"objectID":"Home","href":"GUI_guide/general.html#general-options-menu","title":"General Options Menu","text":"General Options Menu\n\nGeeneral options menu manages system settings such as bumber of preocesses for fluent, paths to input files, Fluent versions,\nGPU selections and other misculaneous settings. This page should contain all relevant options from Fluent launcher window."},{"objectID":"Home","href":"GUI_guide/general.html#solver-precision","title":"General Options Menu > Solver Precision","text":"Solver Precision\n\ntype: switch - string\n\nThis variable is identical to a Double Precision check button in Fluent launcher and makes it possible to switch between\nsingle and double precision solver. Single precision takes up roughly half RAM as double precision solver, but makes larger\nrounding mistakes. Single precision is recomended (especially while using GPU) but users are encuraged to try the difference\non their specific cases."},{"objectID":"Home","href":"GUI_guide/general.html#gpu-or-cpu-solver","title":"General Options Menu > GPU or CPU Solver","text":"GPU or CPU Solver\n\ntype: switch - string\n\nThis variable is identical to a Native GPU Solver check button in Fluent launcher. It gives user an option to solve the case\nusing GPU solver. This dramaticaly accelerates the solution, but high end computational GPU is recomended, as the whole case need\nto fit on GPU RAM (Nvidia A6000 i an example of good GPU for such aplication). With GPU Solver it is still needed to set up\nproper processes count, as CPU is still used for meshing, loading and saving and postprocessing."},{"objectID":"Home","href":"GUI_guide/general.html#solver-processes","title":"General Options Menu > Solver Processes","text":"Solver Processes\n\ntype: text win. - integer\n\nSpecifies number of cores (threads) used by single fluent instance."},{"objectID":"Home","href":"GUI_guide/general.html#turn-on-python-console","title":"General Options Menu > Turn on Python console?","text":"Turn on Python console?\n\ntype: check - bool\n\nWether to start fluent with python console (True) or classical Fluent TUI console (False)."},{"objectID":"Home","href":"GUI_guide/general.html#start-with-gui","title":"General Options Menu > Start with GUI?","text":"Start with GUI?\n\ntype: check - bool\n\nWether to start Fluent instance on background (False) or with Graphical User Interface (True)."},{"objectID":"Home","href":"GUI_guide/general.html#version","title":"General Options Menu > Version","text":"Version\n\ntype: Switch - string\n\nWhich Fluent version to start."},{"objectID":"Home","href":"GUI_guide/general.html#load-entry-msh-file","title":"General Options Menu > Load Entry .msh file…","text":"Load Entry .msh file…\n\ntype: text win. - string\n\nString path to a Entry mesh file that contains loaded geometry of a car. This is so that the entire car geomatry doesnt need to\nbe imported every time only single part or subassembly is changed. This cam be also thought of as current development\nversion of geometry."},{"objectID":"Home","href":"GUI_guide/general.html#parts-to-be-replaced-example","title":"General Options Menu > Parts to be replaced (*example*)…","text":"Parts to be replaced (*example*)…\n\ntype: text win. - string\n\nName of the part or subassembly that needs to be replaced from Entry mesh. For example, if we want to simulate new geometry of\nfront wing subassembly  which is named as FW in CAD tree, it needs to be specified between asterisks  (*)  as *FW*."},{"objectID":"Home","href":"GUI_guide/general.html#load-stp-cad-file","title":"General Options Menu > Load .stp CAD file…","text":"Load .stp CAD file…\n\ntype: text win. - string\n\nPath to a .stp file that contains either a single part or subassembly or entire CAD model, depending on status of\nload full assembly .stp CAD file… check."},{"objectID":"Home","href":"GUI_guide/general.html#load-msh-fluent-mesh-file","title":"General Options Menu > Load .msh Fluent mesh file…","text":"Load .msh Fluent mesh file…\n\ntype: text win. - string\n\nReplaces the Load .stp CAD file… nad takes path of a input volumetric mesh file for starting from solver.\n(in case we already have mesh completed and want to start from solver stage, for example with different settings)"},{"objectID":"Home","href":"GUI_guide/general.html#load-dat-fluent-data-file","title":"General Options Menu > Load .dat Fluent data file…","text":"Load .dat Fluent data file…\n\ntype: text win. - string\n\nPath to a Fluent data file. This option is enabled only when starting from postprocessing stage (for more detailed postpro or\ndiferently placed cuts)"},{"objectID":"Home","href":"GUI_guide/general.html#load-full-assembly-stp-cad-file","title":"General Options Menu > Load full assembly .stp CAD file…","text":"Load full assembly .stp CAD file…\n\ntype: check - bool\n\nWheter to load a single new part or assembly or entire CAD model together with bodies of influence."},{"objectID":"Home","href":"GUI_guide/GUI_guide.html#graphical-user-interface-guide","title":"Graphical User Interface Guide","text":"Graphical User Interface Guide\n\n\n\nSome stupid words for now"},{"objectID":"Home","href":"user_guide/solver_setup.html#setting-up-solver","title":"Setting up solver","text":"Setting up solver\n\nPosprocessing options menu gives users options to choose which and how detailed postprocessing features they want to perform for their simulation."},{"objectID":"Home","href":"user_guide/solver_setup.html#export-forces-to-excell-file","title":"Setting up solver > Export forces to excell file?","text":"Export forces to excell file?\n\ntype: check - bool\n\nOption to export drag, lift, and pressure distribution of all subassemblies into a .CSV file."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#posprocessing-options-menu","title":"Posprocessing Options Menu","text":"Posprocessing Options Menu\n\nPosprocessing options menu gives users options to choose which and how detailed postprocessing features they want to perform for their simulation."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#export-forces-to-excell-file","title":"Posprocessing Options Menu > Export forces to excell file?","text":"Export forces to excell file?\n\ntype: check - bool\n\nOption to export drag, lift, and pressure distribution of all subassemblies into a .CSV file."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#iteration-averaging","title":"Posprocessing Options Menu > Iteration averaging","text":"Iteration averaging\n\ntype: text win. - integer\n\nNumber of latest iterations over which to average drag, lift, distributions data and RMS field values."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#create-report-file","title":"Posprocessing Options Menu > Create report file?","text":"Create report file?\n\ntype: check - bool\n\nOption to create .pdf report file which include information about convergence, mesh quality and some results."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#create-avz-files","title":"Posprocessing Options Menu > Create AVZ files?","text":"Create AVZ files?\n\ntype: check - bool\n\nOption to create .AVZ which contains 3D countured scenes which can be opend in Ansys Viewer. Fluent will create scenes of:\nwall y+, x wall shear stress, static pressure, pressure coeficient and q-criterion isosurface."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#starting-coordinate-m-xy-xz-yz","title":"Posprocessing Options Menu > Starting coordinate [m]: (XY, XZ, YZ)","text":"Starting coordinate [m]: (XY, XZ, YZ)\n\ntype: 3x text win. - float\n\nStarting coordinate from which postprocessing will start creating cutplanes."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#end-coordinate-m-xy-xz-yz","title":"Posprocessing Options Menu > End coordinate [m]: (XY, XZ, YZ)","text":"End coordinate [m]: (XY, XZ, YZ)\n\ntype: 3x text win. - float\n\nEnd coordinate to which postprocessing will finish creating cutplanes."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#number-of-cuts-xy-xz-yz","title":"Posprocessing Options Menu > Number of cuts: (XY, XZ, YZ)","text":"Number of cuts: (XY, XZ, YZ)\n\ntype: 3x text win. - integer\n\nNumber of contour cuts that will be created for each major plane."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#velocity-magnitude-cuts","title":"Posprocessing Options Menu > Velocity magnitude cuts:","text":"Velocity magnitude cuts:\n\ntype: check - bool\n\nWhether to create cuts of velocity magnitude contours."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#velocity-lic-cuts","title":"Posprocessing Options Menu > Velocity LIC cuts:","text":"Velocity LIC cuts:\n\ntype: check - bool\n\nWhether to create cuts of velocity Line Integral Convolutions."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#mean-static-pressure-cuts","title":"Posprocessing Options Menu > Mean Static Pressure cuts:","text":"Mean Static Pressure cuts:\n\ntype: check - bool\n\nWhether to create cuts of Mean Static Pressure contours."},{"objectID":"Home","href":"GUI_guide/postprocessing.html#total-pressure-cuts","title":"Posprocessing Options Menu > Total Pressure cuts:","text":"Total Pressure cuts:\n\ntype: check - bool\n\nWhether to create cuts of Total Pressure contours.#"},{"objectID":"Home","href":"GUI_guide/postprocessing.html#vorticity-cuts","title":"Posprocessing Options Menu > Vorticity cuts:","text":"Vorticity cuts:\n\ntype: check - bool\n\nWhether to create cuts of Vorticity contours."},{"objectID":"Home","href":"index.html#fsae-cfd-automatisation-documentation","title":"FSAE CFD Automatisation documentation","text":"FSAE CFD Automatisation documentation\n\n\n\nThis project aims to incorporate pyFluent (a python Fluent wrapper) into a user friendly and easy to use graphical interface.\nAs a result aerodynamicists with little experience in making CFD calculations can create quality external car simulations.\nAt first the project aimed to create complete automatic workflow from importing a CAD file to getting complete results with\ndrag/lift data and pictures but over time it incorporated feeatures as automatic simulations queue, radiators and fans and turn simulations."},{"objectID":"Home","href":"index.html#why-use-autofluent","title":"FSAE CFD Automatisation documentation > Why Use AutoFluent?","text":"Why Use AutoFluent?\n\nAutomation: Fully atomated workflow from CAD to results.\n\nEase of use: User friendly and simplified interface over Fluent.\n\nSimulation speed: Fully use both CPU and GPU resources at all time thanks to sim queue.\n\nFlexibility: Many options for solver settings, postprocessing, mesh sizings and presets saving."},{"objectID":"Home","href":"index.html#how-it-works","title":"FSAE CFD Automatisation documentation > How it works?","text":"How it works?\n\nThrough GUI user can load CAD files, create or load mesh sizings and choose solver and postprocessing option.\nGUI then sends selected settings into a simulation queue, which automatically sends these settings into a\npyFluent script. The sctipt requires that the imported CAD tree is named in accordance with a .json scoped sizing file\ncreated through GUI."},{"objectID":"Home","href":"index.html#compatibility","title":"FSAE CFD Automatisation documentation > Compatibility","text":"Compatibility\n\nAutoFluent supports Ansys Fluent 2024 R2 and later."},{"objectID":"Home","href":"index.html#resources","title":"FSAE CFD Automatisation documentation > Resources","text":"Resources\n\nPyFluent documentation\n\nFluent documentation\n\nAnsys customer portal"},{"objectID":"Home","href":"index.html#need-help","title":"FSAE CFD Automatisation documentation > Need Help?","text":"Need Help?\n\nVisit the community or support resources:\n\nPyAnsys community forum\n\nSubmit a bug report\n\nContact Ansys support"},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#boundary-conditions-options-menu","title":"Boundary Conditions Options Menu","text":"Boundary Conditions Options Menu\n\nBoundary conditions options menu specifies inlet velocity, wheel diameter and wheel base, radiators and fan settings."},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#inlet-velocity-ms","title":"Boundary Conditions Options Menu > Inlet velocity [m/s]","text":"Inlet velocity [m/s]\n\ntype: text win. - float\n\nInlet air velocity. Same as car speed."},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#wheel-diameter-m","title":"Boundary Conditions Options Menu > Wheel diameter [m]","text":"Wheel diameter [m]\n\ntype: text win. - float\n\nOuter wheel diameter. Used for wheel rotational speed calcualtion."},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#front-wheel-axis-origin-m-x-y-z","title":"Boundary Conditions Options Menu > Front wheel axis origin [m] (X, Y, Z)","text":"Front wheel axis origin [m] (X, Y, Z)\n\ntype: 3x text win. - float\n\nCoordinates that define front axis together with [0,1,0] vector."},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#rear-wheel-axis-origin-m-x-y-z","title":"Boundary Conditions Options Menu > Rear wheel axis origin [m] (X, Y, Z)","text":"Rear wheel axis origin [m] (X, Y, Z)\n\ntype: 3x text win. - float\n\nCoordinates that define rear axis together with [0,1,0] vector."},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#simulate-radiators","title":"Boundary Conditions Options Menu > Simulate radiators?","text":"Simulate radiators?\n\ntype: check - bool\n\nWether cad model includes a radiator which would be simulated as porous zone with power law model.\nFor more info see Porous Media Conditions"},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#radiator-c0","title":"Boundary Conditions Options Menu > Radiator C0","text":"Radiator C0\n\ntype: text win. - float\n\nC0 constant used in power law model."},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#radiator-c0","title":"Boundary Conditions Options Menu > Radiator C0","text":"Radiator C0\n\ntype: text win. - float\n\nC1 constant used in power law model."},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#simulate-fan","title":"Boundary Conditions Options Menu > Simulate fan?","text":"Simulate fan?\n\ntype: check - bool\n\nWether cad model includes a fan which would be simulated as 2d fan zone with piecewise linear pressure curve.\nFor more info see Fan Boundary Conditions"},{"objectID":"Home","href":"GUI_guide/boundaryconditions.html#fan-curve-txt-max-50-points","title":"Boundary Conditions Options Menu > Fan curve .txt (max 50 points!)","text":"Fan curve .txt (max 50 points!)\n\ntype: text win. - string\n\nString path to a .txt file that specify fan pressure curve."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#scoped-sizing-options-menu","title":"Scoped Sizing Options Menu","text":"Scoped Sizing Options Menu\n\nScoped Sizing options menu specifies mesh dimensions on specified parts and assemblies and also in Bodies Of Influence (BOI)."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#open","title":"Scoped Sizing Options Menu > Open…","text":"Open…\n\ntype: text win. - string\n\nPath to a .json file containing scoped sizings to be loaded. Opens an explorer window"},{"objectID":"Home","href":"GUI_guide/scopesizing.html#name","title":"Scoped Sizing Options Menu > Name","text":"Name\n\ntype: text win. - string\n\nName of mesh sizing. Should match name of coinciding part or assembly in CAD tree."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#obj-id","title":"Scoped Sizing Options Menu > Obj ID","text":"Obj ID\n\ntype: text win. - integer\n\nID of created mesh sizing. Creates automatically, no need to overwrite."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#max-size","title":"Scoped Sizing Options Menu > Max. size","text":"Max. size\n\ntype: text win. - float\n\nMaximum allowed mesh size (in mm) at given location."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#min-size","title":"Scoped Sizing Options Menu > Min. size","text":"Min. size\n\ntype: text win. - float\n\nMinimum allowed mesh size (in mm) at given location. If another sizing with smaller Min. size value exist on same part, smaller value is used."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#growth-rate","title":"Scoped Sizing Options Menu > Growth rate","text":"Growth rate\n\ntype: text win. - float\n\nA maximum rate of geometric growth of neighboring cells."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#size-control-method","title":"Scoped Sizing Options Menu > Size control method","text":"Size control method\n\ntype: switch - string\n\nWhich size controls are to be applied for given assembly. Aviable are Curvature, Proximity and Curvature and Proximity.\nFor more info see Size Functions and Scoped Sizing"},{"objectID":"Home","href":"GUI_guide/scopesizing.html#cells-per-gap","title":"Scoped Sizing Options Menu > Cells per gap","text":"Cells per gap\n\ntype: text win. - float\n\nActive when proximity method is selected. Minimum cell layers used to fill a gap."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#curvature","title":"Scoped Sizing Options Menu > Curvature","text":"Curvature\n\ntype: text win. - float\n\nActive when curvature method is selected. Minimum angle to be preserved in curve."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#proximity-scope-to","title":"Scoped Sizing Options Menu > Proximity scope to…","text":"Proximity scope to…\n\ntype: switch - string\n\nActive when proximity method is selected. Defines to which part geomatry feature the proximity sizing is applied to. Aviable are Edge, Faces\nand Faces and Edges."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#curvature-scope-to","title":"Scoped Sizing Options Menu > Curvature scope to…","text":"Curvature scope to…\n\ntype: switch - string\n\nActive when curvature method is selected. Defines to which part geomatry feature the curvature sizing is applied to. Aviable are Edge, Faces\nand Faces and Edges."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#write","title":"Scoped Sizing Options Menu > Write…","text":"Write…\n\ntype: button - string\n\nOpens an explorer window through which user saves the current prism and scoped sizing settings into a .json file."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#add-child","title":"Scoped Sizing Options Menu > Add Child","text":"Add Child\n\ntype: button - mesh_object\n\nAdds a new mesh sizing under a currently chosen sizing."},{"objectID":"Home","href":"GUI_guide/scopesizing.html#update","title":"Scoped Sizing Options Menu > Update","text":"Update\n\ntype: button - -\n\nSaves changed parameters for current mesh sizing. Needs to be pressed after every change to a sizing."}]